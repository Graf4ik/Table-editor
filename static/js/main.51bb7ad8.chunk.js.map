{"version":3,"sources":["Components/Editor.js","Components/MyTable.js","App.js","index.js"],"names":["Editor","mainCheked","this","props","type","Form","className","Group","InputGroup","Prepend","Text","id","FormControl","aria-label","aria-describedby","placeholder","value","name","onChange","onNameChange","as","Col","controlId","Label","Control","defaultValue","onTypeChange","Button","variant","onClick","onSaveClick","React","Component","MyTable","peoples","map","d","index","data-index","openEditor","App","save","bind","onColorChange","deleteEmployer","state","editedId","emptyPeople","localStorageRef","localStorage","getItem","console","log","getUsers","e","item","dataIndex","target","getAttribute","$","closest","attr","parseInt","removeClass","addClass","setState","newPeoples","preventDefault","splice","alert","axios","then","res","data","table","catch","err","people","filter","i","length","push","setItem","JSON","stringify","Container","ButtonGroup","title","Row","col","ReactDOM","render","document","getElementById"],"mappings":"kUAgDeA,E,4JA5CX,WACI,IAAMC,EAAkC,SAApBC,KAAKC,MAAMC,KAC/B,OACI,eAACC,EAAA,EAAD,CAAMC,UAAU,YAAhB,UACI,cAACD,EAAA,EAAKE,MAAN,UACI,eAACC,EAAA,EAAD,CAAYF,UAAU,OAAtB,UACI,cAACE,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,4BAApB,oBAEJ,cAACC,EAAA,EAAD,CACIC,aAAW,UACXC,mBAAiB,4BAA4BH,GAAG,OAAOI,YAAY,kBACnEC,MAAOd,KAAKC,MAAMc,KAAMC,SAAUhB,KAAKC,MAAMgB,oBAKzD,eAACd,EAAA,EAAKE,MAAN,CAAYa,GAAIC,IAAKC,UAAU,gBAA/B,UACI,cAACjB,EAAA,EAAKkB,MAAN,mBACA,eAAClB,EAAA,EAAKmB,QAAN,CAAcJ,GAAG,SAASK,aAAcxB,EAAYiB,SAAUhB,KAAKC,MAAMuB,aAAzE,UACI,wBAAQf,GAAG,YAAYM,KAAK,YAAYD,MAAM,OAA9C,kBACA,wBAAQL,GAAG,YAAYM,KAAK,YAAYD,MAAM,OAA9C,wBAIR,cAACX,EAAA,EAAKE,MAAN,UACI,eAACC,EAAA,EAAD,CAAYF,UAAU,OAAtB,UACI,cAACE,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,4BAApB,qBAEJ,sBAAKL,UAAU,cAAf,UACI,uBAAOF,KAAK,QAAQY,MAAOd,KAAKC,MAAMa,MAAOE,SAAUhB,KAAKC,MAAMe,WAClE,uBAAOd,KAAK,OAAOY,MAAOd,KAAKC,MAAMa,MAAOE,SAAUhB,KAAKC,MAAMe,mBAM7E,cAACS,EAAA,EAAD,CAAQC,QAAQ,UAAUxB,KAAK,SAASyB,QAAS3B,KAAKC,MAAM2B,YAA5D,yB,GAvCKC,IAAMC,WC8BZC,E,4JA9Bd,WAAU,IAAD,OACR,OACC,wBAAO3B,UAAU,uBAAjB,UACC,gCACA,+BACC,oCACA,sCACA,sCACA,4CAGD,gCACCJ,KAAKC,MAAM+B,QAAQC,KAAI,SAACC,EAAGC,GAC3B,OACC,qBAAI/B,UAAU,MACbgC,aAAYD,EACZR,QAAS,EAAK1B,MAAMoC,WAFrB,UAIC,qBAAIjC,UAAU,QAAd,cAAyB+B,EAAzB,OACA,mCAAOD,EAAEnB,KAAT,OACA,mCAAOmB,EAAEhC,KAAT,OACA,mCAAOgC,EAAEpB,MAAT,SAPyBqB,e,GAfVN,IAAMC,W,iBC6LbQ,E,kDApLX,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IACDsC,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKH,WAAa,EAAKA,WAAWG,KAAhB,gBAClB,EAAKvB,aAAe,EAAKA,aAAauB,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKhB,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,MAAQ,CACTX,QAAS,GACTjB,KAAM,GACNb,KAAM,OACNY,MAAO,UACP8B,UAAW,GAEf,EAAKC,YAAc,CACf9B,KAAM,EAAK4B,MAAM5B,KACjBb,KAAM,OACNY,MAAO,WAlBI,E,qDAqBnB,WACI,IAAMgC,EAAkBC,aAAaC,QAAQ,WAI7CC,QAAQC,IAAI,kBAAmBJ,GAC/B9C,KAAKmD,a,wBAIT,SAAWC,GACP,IAGIC,EAHAC,EAAYF,EAAEG,OAAOC,aAAa,eAAiBC,IAAEL,EAAEG,QAAQG,QAAQ,MAAMC,KAAK,cAClFxB,EAAQyB,SAASN,GACrBG,IAAE,aAAaI,YAAY,WAEZ,IAAX1B,GAEAsB,IAAEL,EAAEG,QAAQG,QAAQ,MAAMI,SAAS,UACnCT,EAAOrD,KAAK2C,MAAMX,QAAQG,IAE1BkB,EAAOrD,KAAK6C,YAGhB7C,KAAK+D,SAAS,CACV7D,KAAMmD,EAAKnD,KACXa,KAAMsC,EAAKtC,KACXD,MAAOuC,EAAKvC,MACZ8B,SAAUT,M,4BAIlB,SAAeiB,GAGX,IAAIY,EAFJZ,EAAEa,iBACFR,IAAE,aAAaI,YAAY,WAEE,IAAzB7D,KAAK2C,MAAMC,WAKXoB,EAAahE,KAAK2C,MAAMX,SACbkC,OAAOlE,KAAK2C,MAAMC,SAAU,GAE3C5C,KAAK+D,SAAS,CACV/B,QAASgC,EACTpB,UAAW,KATXuB,MAAM,gM,0BAcd,SAAaf,GACTpD,KAAK+D,SAAS,CACVhD,KAAMqC,EAAEG,OAAOzC,U,0BAIvB,SAAasC,GACTpD,KAAK+D,SAAS,CACV7D,KAAMkD,EAAEG,OAAOzC,U,2BAIvB,SAAcsC,GACVpD,KAAK+D,SAAS,CACVjD,MAAOsC,EAAEG,OAAOzC,U,sBAIxB,WAAY,IAAD,OACPsD,MAAU,8BACLC,MAAK,SAACC,GACH,EAAKP,SAAS,CACV/B,QAASsC,EAAIC,KAAKC,WAGzBC,OAAM,SAACC,S,kBAGhB,SAAKtB,GACDA,EAAEa,iBACFR,IAAE,aAAaI,YAAY,UAC3B,IAAIc,EACA,CACI5D,KAAMf,KAAK2C,MAAM5B,KACjBb,KAAMF,KAAK2C,MAAMzC,KACjBY,MAAOd,KAAK2C,MAAM7B,OAGtBkD,EAAahE,KAAK2C,MAAMX,QAC5B,IAA6B,IAAzBhC,KAAK2C,MAAMC,SAAkB,CAC7B,GAAwB,KAApB5C,KAAK2C,MAAM5B,KAEX,YADAoD,MAAM,+HAGV,GAAIH,EAAWY,QACX,SAAAC,GAAC,OAAIA,EAAE9D,OAAS4D,EAAO5D,QAAM+D,OAAS,EAEtC,YADAX,MAAM,wOAGVH,EAAWe,KAAKJ,GAChB3E,KAAK2C,MAAM5B,KAAO,GAClBgC,aAAaiC,QAAQ,UAAWC,KAAKC,UAAUP,SAG/CX,EAAWhE,KAAK2C,MAAMC,UAAU+B,EAEpC3E,KAAK+D,SAAS,CACV/B,QAASgC,M,oBAKjB,WACI,OACI,sBAAK5D,UAAU,MAAf,UACI,8CACA,cAAC+E,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAazE,aAAW,gBAAxB,UACI,cAACc,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAS3B,KAAKqC,WACdD,aAAW,KACXiD,MAAM,eAJV,iBAOA,cAAC5D,EAAA,EAAD,CACIC,QAAQ,SACRC,QAAS3B,KAAK0C,eAFlB,yBAOR,8BACI,eAAC4C,EAAA,EAAD,CAAKlF,UAAU,WAAf,UACI,cAACe,EAAA,EAAD,CAAKoE,IAAI,UAAUnF,UAAU,QAA7B,SACI,cAAC,EAAD,CACI4B,QAAShC,KAAK2C,MAAMX,QACpBK,WAAYrC,KAAKqC,eAGzB,eAAClB,EAAA,EAAD,CAAKoE,IAAI,UAAUnF,UAAU,OAA7B,mBAEI,cAAC,EAAD,CACOwB,YAAa5B,KAAKuC,KAClBtB,aAAcjB,KAAKiB,aACnBO,aAAcxB,KAAKwB,aACnBR,SAAUhB,KAAKyC,cACfvC,KAAMF,KAAK2C,MAAMzC,KACjBa,KAAMf,KAAK2C,MAAM5B,KACjBD,MAAOd,KAAK2C,MAAM7B,uB,GA3KnCe,IAAMC,W,MCJxB0D,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.51bb7ad8.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, Form, InputGroup, FormControl, Col } from 'react-bootstrap';\n\nclass Editor extends React.Component {\n    render() {\n        const mainCheked = (this.props.type === \"main\")\n        return (\n            <Form className=\"text-left\">\n                <Form.Group>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Name</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            aria-label=\"Default\"\n                            aria-describedby=\"inputGroup-sizing-default\" id=\"name\" placeholder=\"Enter your name\"\n                            value={this.props.name} onChange={this.props.onNameChange}\n                        />\n                    </InputGroup>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>Type</Form.Label>\n                    <Form.Control as=\"select\" defaultValue={mainCheked} onChange={this.props.onTypeChange}>\n                        <option id=\"mainRadio\" name=\"typeRadio\" value=\"main\">Main</option>\n                        <option id=\"sideRadio\" name=\"typeRadio\" value=\"side\">Side</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Color</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <div className=\"colorPicker\">\n                            <input type=\"color\" value={this.props.value} onChange={this.props.onChange}/>\n                            <input type=\"text\" value={this.props.value} onChange={this.props.onChange}/>\n                        </div>\n\n                    </InputGroup>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"sumbit\" onClick={this.props.onSaveClick}>Save</Button>\n            </Form>\n        )\n    }\n}\n\nexport default Editor;","import React from \"react\";\n\nclass MyTable extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<table className='table table-bordered'>\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>id</th>\n\t\t\t\t\t<th>name</th>\n\t\t\t\t\t<th>type</th>\n\t\t\t\t\t<th>color</th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t{this.props.peoples.map((d, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr className='p-4' key={ index }\n\t\t\t\t\t\t\tdata-index={index}\n\t\t\t\t\t\t\tonClick={this.props.openEditor}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<td className='index'> { index } </td>\n\t\t\t\t\t\t\t<td> { d.name } </td>\n\t\t\t\t\t\t\t<td> { d.type } </td>\n\t\t\t\t\t\t\t<td> { d.value } </td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t)\n\t}\n}\n\nexport default MyTable;\n","import React from 'react';\nimport './App.scss';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport * as axios from 'axios';\nimport Editor from './Components/Editor.js';\nimport MyTable from \"./Components/MyTable\";\nimport $ from 'jquery';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.save = this.save.bind(this);\n        this.openEditor = this.openEditor.bind(this);\n        this.onNameChange = this.onNameChange.bind(this);\n        this.onColorChange = this.onColorChange.bind(this);\n        this.onTypeChange = this.onTypeChange.bind(this);\n        this.deleteEmployer = this.deleteEmployer.bind(this);\n        this.state = {\n            peoples: [],\n            name: \"\",\n            type: \"main\",\n            value: \"#000000\",\n            editedId: -1\n        };\n        this.emptyPeople = {\n            name: this.state.name,\n            type: \"main\",\n            value: \"#000000\"\n        };\n    }\n    componentDidMount() {\n        const localStorageRef = localStorage.getItem('peoples')\n        if (localStorageRef) {\n            //this.setState({peoples: JSON.parse(localStorageRef)})\n        }\n        console.log('localStorageRef', localStorageRef)\n        this.getUsers();\n    };\n\n\n    openEditor(e) {\n        let dataIndex = e.target.getAttribute('data-index') || $(e.target).closest(\"tr\").attr('data-index');\n        let index = parseInt(dataIndex);\n        $(\".table tr\").removeClass(\"active\")\n        let item;\n        if (index !== -1) {\n\n            $(e.target).closest(\"tr\").addClass(\"active\");\n            item = this.state.peoples[index];\n        } else {\n            item = this.emptyPeople;\n        }\n\n        this.setState({\n            type: item.type,\n            name: item.name,\n            value: item.value,\n            editedId: index\n        });\n    }\n\n    deleteEmployer(e) {\n        e.preventDefault();\n        $(\".table tr\").removeClass(\"active\")\n        let newPeoples;\n        if (this.state.editedId === -1 ) {\n            alert(\"Вы должны выбрать поле для удаления!\");\n            return;\n        }\n        else {\n            newPeoples = this.state.peoples;\n            newPeoples.splice(this.state.editedId, 1);\n        }\n        this.setState({\n            peoples: newPeoples,\n            editedId: -1\n        });\n    }\n\n\n    onNameChange(e) {\n        this.setState({\n            name: e.target.value\n        });\n    };\n\n    onTypeChange(e) {\n        this.setState({\n            type: e.target.value\n        });\n    };\n\n    onColorChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    };\n\n    getUsers() {\n        axios.get('./assets/default_data.json')\n            .then((res) => {\n                this.setState({\n                    peoples: res.data.table\n                });\n            })\n            .catch((err) => {});\n    }\n\n    save(e) {\n        e.preventDefault();\n        $(\".table tr\").removeClass(\"active\")\n        let people =\n            {\n                name: this.state.name,\n                type: this.state.type,\n                value: this.state.value\n            };\n\n        let newPeoples = this.state.peoples;\n        if (this.state.editedId === -1 ) {\n            if (this.state.name === \"\") {\n                alert(\"Пожалуйста введите имя!\")\n                return\n            }\n            if (newPeoples.filter(\n                i => i.name === people.name).length > 0) {\n                alert(\"Пользователь с таким именем уже существует!\");\n                return;\n            }\n            newPeoples.push(people);\n            this.state.name = '';\n            localStorage.setItem('peoples', JSON.stringify(people))\n        }\n        else {\n            newPeoples[this.state.editedId]=people\n        }\n        this.setState({\n            peoples: newPeoples\n        });\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Table editor</h1>\n                <Container>\n                    <ButtonGroup aria-label=\"Basic example\">\n                        <Button\n                            variant=\"success\"\n                            onClick={this.openEditor}\n                            data-index=\"-1\"\n                            title=\"Add employer\"\n                        >Add\n                        </Button>\n                        <Button\n                            variant=\"danger\"\n                            onClick={this.deleteEmployer}\n                        >Delete\n                        </Button>\n                    </ButtonGroup>\n                </Container>\n                <div>\n                    <Row className=\"my-1 p-3\">\n                        <Col col=\"12 lg-6\" className=\"panel\">\n                            <MyTable\n                                peoples={this.state.peoples}\n                                openEditor={this.openEditor}\n                            />\n                        </Col>\n                        <Col col=\"12 lg-6\" className=\"card\">\n                            Editor\n                            <Editor\n                                   onSaveClick={this.save}\n                                   onNameChange={this.onNameChange}\n                                   onTypeChange={this.onTypeChange}\n                                   onChange={this.onColorChange}\n                                   type={this.state.type}\n                                   name={this.state.name}\n                                   value={this.state.value}\n                            />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// serviceWorker.unregister();\n"],"sourceRoot":""}