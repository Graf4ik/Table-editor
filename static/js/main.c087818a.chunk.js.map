{"version":3,"sources":["Components/Editor.js","Components/MyTable.js","App.js","index.js"],"names":["Editor","mainCheked","this","props","type","Form","className","Group","InputGroup","Prepend","Text","id","FormControl","aria-label","aria-describedby","placeholder","value","name","onChange","onNameChange","as","Col","controlId","Label","Control","defaultValue","onTypeChange","Button","variant","onClick","onSaveClick","React","Component","MyTable","peoples","map","d","index","data-index","openEditor","App","save","bind","onColorChange","deleteEmployer","state","editedId","emptyPeople","localStorageRef","localStorage","getItem","console","log","getUsers","e","item","dataIndex","target","getAttribute","$","closest","attr","parseInt","removeClass","addClass","setState","newPeoples","preventDefault","splice","alert","axios","then","res","data","table","catch","err","people","filter","i","length","push","setItem","JSON","stringify","Container","ButtonGroup","title","Row","col","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c087818a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Form, InputGroup, FormControl, Col } from 'react-bootstrap';\r\n\r\nclass Editor extends React.Component {\r\n    render() {\r\n        const mainCheked = (this.props.type === \"main\")\r\n        return (\r\n            <Form className=\"text-left\">\r\n                <Form.Group>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Name</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            aria-label=\"Default\"\r\n                            aria-describedby=\"inputGroup-sizing-default\" id=\"name\" placeholder=\"Enter your name\"\r\n                            value={this.props.name} onChange={this.props.onNameChange}\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Form.Control as=\"select\" defaultValue={mainCheked} onChange={this.props.onTypeChange}>\r\n                        <option id=\"mainRadio\" name=\"typeRadio\" value=\"main\">Main</option>\r\n                        <option id=\"sideRadio\" name=\"typeRadio\" value=\"side\">Side</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"inputGroup-sizing-default\">Color</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <div className=\"colorPicker\">\r\n                            <input type=\"color\" value={this.props.value} onChange={this.props.onChange}/>\r\n                            <input type=\"text\" value={this.props.value} onChange={this.props.onChange}/>\r\n                        </div>\r\n\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"sumbit\" onClick={this.props.onSaveClick}>Save</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Editor;","import React from \"react\";\r\n\r\nclass MyTable extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className='table table-bordered'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>id</th>\r\n\t\t\t\t\t<th>name</th>\r\n\t\t\t\t\t<th>type</th>\r\n\t\t\t\t\t<th>color</th>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{this.props.peoples.map((d, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr className='p-4' key={ index }\r\n\t\t\t\t\t\t\tdata-index={index}\r\n\t\t\t\t\t\t\tonClick={this.props.openEditor}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<td className='index'> { index } </td>\r\n\t\t\t\t\t\t\t<td> { d.name } </td>\r\n\t\t\t\t\t\t\t<td> { d.type } </td>\r\n\t\t\t\t\t\t\t<td> { d.value } </td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t)})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MyTable;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport * as axios from 'axios';\r\nimport Editor from './Components/Editor.js';\r\nimport MyTable from \"./Components/MyTable\";\r\nimport $ from 'jquery';\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.save = this.save.bind(this);\r\n        this.openEditor = this.openEditor.bind(this);\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onColorChange = this.onColorChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.deleteEmployer = this.deleteEmployer.bind(this);\r\n        this.state = {\r\n            peoples: [],\r\n            name: \"\",\r\n            type: \"main\",\r\n            value: \"#000000\",\r\n            editedId: -1\r\n        };\r\n        this.emptyPeople = {\r\n            name: this.state.name,\r\n            type: \"main\",\r\n            value: \"#000000\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const localStorageRef = localStorage.getItem('peoples')\r\n        if (localStorageRef) {\r\n            //this.setState({peoples: JSON.parse(localStorageRef)})\r\n        }\r\n        console.log('localStorageRef', localStorageRef)\r\n        this.getUsers();\r\n    };\r\n\r\n\r\n    openEditor(e) {\r\n        let dataIndex = e.target.getAttribute('data-index') || $(e.target).closest(\"tr\").attr('data-index');\r\n        let index = parseInt(dataIndex);\r\n        $(\".table tr\").removeClass(\"active\")\r\n        let item;\r\n        if (index !== -1) {\r\n\r\n            $(e.target).closest(\"tr\").addClass(\"active\");\r\n            item = this.state.peoples[index];\r\n        } else {\r\n            item = this.emptyPeople;\r\n        }\r\n\r\n        this.setState({\r\n            type: item.type,\r\n            name: item.name,\r\n            value: item.value,\r\n            editedId: index\r\n        });\r\n    }\r\n\r\n    deleteEmployer(e) {\r\n        e.preventDefault();\r\n        $(\".table tr\").removeClass(\"active\")\r\n        let newPeoples;\r\n        if (this.state.editedId === -1 ) {\r\n            alert(\"Вы должны выбрать поле для удаления!\");\r\n            return;\r\n        }\r\n        else {\r\n            newPeoples = this.state.peoples;\r\n            newPeoples.splice(this.state.editedId, 1);\r\n        }\r\n        this.setState({\r\n            peoples: newPeoples,\r\n            editedId: -1\r\n        });\r\n    }\r\n\r\n\r\n    onNameChange(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    };\r\n\r\n    onTypeChange(e) {\r\n        this.setState({\r\n            type: e.target.value\r\n        });\r\n    };\r\n\r\n    onColorChange(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n    };\r\n\r\n    getUsers() {\r\n        axios.get('./assets/default_data.json')\r\n            .then((res) => {\r\n                this.setState({\r\n                    peoples: res.data.table\r\n                });\r\n            })\r\n            .catch((err) => {});\r\n    }\r\n\r\n    save(e) {\r\n        e.preventDefault();\r\n        $(\".table tr\").removeClass(\"active\")\r\n        let people =\r\n            {\r\n                name: this.state.name,\r\n                type: this.state.type,\r\n                value: this.state.value\r\n            };\r\n\r\n        let newPeoples = this.state.peoples;\r\n        if (this.state.editedId === -1 ) {\r\n            if (this.state.name === \"\") {\r\n                alert(\"Пожалуйста введите имя!\")\r\n                return\r\n            }\r\n            if (newPeoples.filter(\r\n                i => i.name === people.name).length > 0) {\r\n                alert(\"Пользователь с таким именем уже существует!\");\r\n                return;\r\n            }\r\n            newPeoples.push(people);\r\n            this.state.name = '';\r\n            localStorage.setItem('peoples', JSON.stringify(people))\r\n        }\r\n        else {\r\n            newPeoples[this.state.editedId]=people\r\n        }\r\n        this.setState({\r\n            peoples: newPeoples\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Table editor</h1>\r\n                <Container>\r\n                    <ButtonGroup aria-label=\"Basic example\">\r\n                        <Button\r\n                            variant=\"success\"\r\n                            onClick={this.openEditor}\r\n                            data-index=\"-1\"\r\n                            title=\"Add employer\"\r\n                        >Add\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            onClick={this.deleteEmployer}\r\n                        >Delete\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Container>\r\n                <div>\r\n                    <Row className=\"my-1 p-3\">\r\n                        <Col col=\"12 lg-6\" className=\"panel\">\r\n                            <MyTable\r\n                                peoples={this.state.peoples}\r\n                                openEditor={this.openEditor}\r\n                            />\r\n                        </Col>\r\n                        <Col col=\"12 lg-6\" className=\"card\">\r\n                            Editor\r\n                            <Editor\r\n                                   onSaveClick={this.save}\r\n                                   onNameChange={this.onNameChange}\r\n                                   onTypeChange={this.onTypeChange}\r\n                                   onChange={this.onColorChange}\r\n                                   type={this.state.type}\r\n                                   name={this.state.name}\r\n                                   value={this.state.value}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}